name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # バックエンドのテストとビルド
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_teaching_showcase
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Setup environment
      run: |
        cp .env.example .env
        echo "DATABASE_URL=postgresql://test:test@localhost:5432/test_teaching_showcase" >> .env
        echo "JWT_SECRET=test-secret-key" >> .env

    - name: Run Prisma migrations
      run: npx prisma migrate deploy

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test -- --coverage

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage
        path: backend/coverage/lcov.info

    - name: Build
      run: npm run build

  # フロントエンドのテストとビルド
  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test -- --coverage --passWithNoTests

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: frontend/coverage/lcov.info

    - name: Build
      run: npm run build
      env:
        NEXT_PUBLIC_API_URL: http://localhost:5000

  # カバレッジレポートの統合
  coverage:
    name: Coverage Report
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Download backend coverage
      uses: actions/download-artifact@v4
      with:
        name: backend-coverage
        path: ./backend-coverage

    - name: Download frontend coverage
      uses: actions/download-artifact@v4
      with:
        name: frontend-coverage
        path: ./frontend-coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./backend-coverage/lcov.info,./frontend-coverage/lcov.info
        fail_ci_if_error: false
        verbose: true

  # 依存関係の脆弱性チェック
  security:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Run npm audit on backend
      working-directory: ./backend
      run: npm audit --production
      continue-on-error: true

    - name: Run npm audit on frontend
      working-directory: ./frontend
      run: npm audit --production
      continue-on-error: true